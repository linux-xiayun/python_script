#!/usr/bin/env python2.7
# -*- coding: utf-8 -*-

'''
@xiayun
@xiay@baomihua.com
#爬取网站内容，利用phantomjs
'''
import time,sys
import random
import requests,os
from selenium import webdriver
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
import time
import urllib,urllib2
import smtplib
import re
from email.mime.text import MIMEText
from email.header import Header
from subprocess import Popen,PIPE
from bs4 import BeautifulSoup

#页面爬取，匹配价格
def reptile():
    #爬虫参数设置
    dcap = dict(DesiredCapabilities.PHANTOMJS)
    dcap["phantomjs.page.settings.userAgent"] = ('Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36')
    driver = webdriver.PhantomJS(desired_capabilities=dcap,)
    #URL设置
    try:
        driver.get('https://sijipiao.fliggy.com/ie/flight_search_result.htm?searchBy=1281&spm=181.7091613.a1z67.1002&_input_charset=utf-8&tripType=1&depCityName=%E4%B8%8A%E6%B5%B7&depCity=SHA&depDate=2018-02-19&arrCityName=%E6%9C%AD%E5%B9%8C&arrCity=SPK&arrDate=2018-02-27')
    except:
        print "timeout"
    #爬取页面源码，匹配价格字段，返回price变量
    finally:
        data = driver.page_source
        time.sleep(1)
        driver.quit()
        soup = BeautifulSoup(data, 'html.parser')
        data_1 = soup.find(attrs={'data-list-index':'1'})
        data_2 = str(data_1.find('span', attrs={'class': 'price-num'}))
        words = r"\<\/em\>(.*)\<\/span\>"
        rule = re.compile(words)
        price = int(re.findall(rule, data_2)[0])

    return price

#将结果发送邮件给指定receivers
def send_mail(result,messages):
    receivers = ['XX@XX.com',]
    mail_host = 'smtp.exmail.qq.com'
    mail_user = 'XXX@XXX.com'
    mail_pass = 'XXXXXXX'
    mail_postfix = 'XXXX'
    title = str(result)
    msg = MIMEText(messages, 'plain', 'utf-8')
    me = title.decode('utf-8') + "<" + mail_user + ">"
    msg['Subject'] = Header(title, 'utf-8')
    msg['From'] = Header(me, 'utf-8')
    msg['To'] = Header(";".join(receivers), 'utf-8')
    try:
        s = smtplib.SMTP()
        s.connect(mail_host)
        s.login(mail_user, mail_pass)
        s.sendmail(me,receivers , msg.as_string())
        s.close()
        print "发送成功"
        return True
    except smtplib.SMTPException:
        print "Error: 无法发送邮件"
        return False

if __name__ == '__main__':
# 邮件发送条件设置，阀值自定义（例4977）
    global result, messages
    price = reptile()
    if price >= 4977:
        messages = "价格还是那么贵%d" % price
        result = "格老子的！啥时候降价！"
    if price  < 4977:
        messages = "机票价格低于%d" % price
        result = "喜讯喜讯！机票降价了！快去买！"
    send_mail(result=result, messages=messages)
    sys.exit(0)
